# ----- Variable: Colors ------------------------------------------------------
NC="\033[m"

BLACK="\033[0;30m"
BLUE="\033[0;34m"
GREEN="\033[0;32m"
CYAN="\033[0;36m"
RED="\033[0;31m"
PURPLE="\033[0;35m"
ORANGE="\033[0;33m"
LGRAY="\033[0;37m"
DGRAY="\033[1;30m"
LBLUE="\033[1;34m"
LGREEN="\033[1;32m"
LCYAN="\033[1;36m"
LRED="\033[1;31m"
LPURPLE="\033[1;35m"
YELLOW="\033[1;33m"
WHITE="\033[1;37m"



C_NOTE=$GREEN
C_ERROR=$RED
# -----------------------------------------------------------------------------


echo -e "${BLUE}===============================================================================${NC}"
echo -e "${BLUE}PRE-REMOVE ...${NC}"


# ----- VARIABLES ----------------------------------------------------------------------------------------------------
BACKUP_DIR="/backup"
VER_RELEASE=$(/bin/rpm -qa %{APP_NAME})                     # Example /bin/rpm -qa zira-mvno-ar   --->   zira-mvno-ar-6.2.2-1511091105.x86_64
# --------------------------------------------------------------------------------------------------------------------


# ----- UNINSTAL - BACKUP --------------------------------------------------------------------------------------------

if [ $1 -eq 0 ]; then

# ----- Create backup directory if doesn't exist ---------------------------------------------------------------------
if [ ! -d "$BACKUP_DIR/%{APP_GROUP}/%{APP_NAME}" ]; then
   echo "Create directory: $BACKUP_DIR/%{APP_GROUP}/%{APP_NAME}"
   mkdir -p $BACKUP_DIR/%{APP_GROUP}/%{APP_NAME}                                                                                              # mkdir -p /backup/zira/<app_name>
fi
# --------------------------------------------------------------------------------------------------------------------


# ----- Backup configuration directory -------------------------------------------------------------------------------
if [ -d %{APP_ROOT}/%{OVERRIDE_PROPERTIES_FOLDER} ]; then                                                                                     # If directory configurtion exist
   echo "Creating backup of directory configuration"
   /bin/tar -P -rvf $BACKUP_DIR/%{APP_GROUP}/%{APP_NAME}/$VER_RELEASE.tar %{APP_ROOT}/configuration                                           # tar overidde.properties (append)
fi
# --------------------------------------------------------------------------------------------------------------------

# ----- Backup dbscripts directory -----------------------------------------------------------------------------------
if [ -d %{APP_ROOT}/dbscripts ]; then                                                                                                         # If directory dbscripts exist
   echo "Creating backup of directory dbscripts"
   /bin/tar -P -rvf $BACKUP_DIR/%{APP_GROUP}/%{APP_NAME}/$VER_RELEASE.tar %{APP_ROOT}/dbscripts                                               # tar overidde.properties (append)
fi
# --------------------------------------------------------------------------------------------------------------------

%{APP_ROOT}/%{APP_SCRIPT_NAME} removestartup                                         # Remove from BootUp
%{APP_ROOT}/%{APP_SCRIPT_NAME} removelogrotate                                       # Remove logrotate
rm -fv /etc/init.d/%{APP_SCRIPT_NAME}                                                # Remove /etc/init/zira-mvno-<name>
rm -fv /etc/init.d/%{APP_SCRIPT_NAME}-%{APP_VERSION}                                 # Remove /etc/init/zira-mvno-<name>-<ver>-SNAPSHOT

rm -R %{APP_LOG_ROOT}                                                                # Remove /var/log/.... directory


if [ -f %{APP_ROOT}/%{APP_SCRIPT_NAME}.ksh ]; then
    rm %{APP_ROOT}/%{APP_SCRIPT_NAME}.ksh
fi

fi
# --------------------------------------------------------------------------------------------------------------------



# ----- Check if application running ---------------------------------------------------------------------------------
%{APP_ROOT}/%{APP_SCRIPT_NAME} status > /dev/null                                    # Does application running
status=$?
if [ $status -eq 0 ]; then                                                           # If running - stop
   %{APP_ROOT}/%{APP_SCRIPT_NAME} stop
fi
# --------------------------------------------------------------------------------------------------------------------



